{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/auth.guard.ts","./src/app/services/http-interceptor.service.ts","./src/app/services/no-auth.guard.ts","./src/app/services/user.service.ts","./src/app/store/actions/user.actions.ts","./src/app/store/effects/user.effects.ts","./src/app/store/reducers/index.ts","./src/app/store/reducers/user.reducer.ts","./src/app/store/store.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { AuthGuard } from './services/auth.guard';\nimport { NoAuthGuard } from './services/no-auth.guard';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    loadChildren: () => import('./modules/auth/auth.module').then((m) => m.AuthModule),\n    canActivate: [NoAuthGuard],\n  },\n  {\n    path: '',\n    loadChildren: () => import('./modules/chat/chat.module').then((m) => m.ChatModule),\n    canLoad: [AuthGuard],\n    canActivate: [AuthGuard],\n  },\n  {\n    path: '**',\n    redirectTo: 'auth',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { LoadUser } from './store/actions/user.actions';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { State } from './store/reducers';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    private store: Store<State>,\n  ) { }\n\n  ngOnInit() {\n    this.store.dispatch(new LoadUser());\n  }\n}\n","<router-outlet></router-outlet>\r\n","import { CookieService } from 'ngx-cookie-service';\nimport { RouterModule } from '@angular/router';\nimport { AppStoreModule } from './store/store.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { HttpInterceptorService } from './services/http-interceptor.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n    AppStoreModule,\n    HttpClientModule\n  ],\n  providers: [\n    CookieService,\n    { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorService, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanLoad, Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router, CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { Store } from '@ngrx/store';\nimport { State } from '../store/reducers';\n\nimport { map, take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanLoad, CanActivate {\n  constructor(\n    private router: Router,\n    private store: Store<State>,\n  ) { }\n\n  // Prevents fetching lazy loading modules\n  canLoad(route: Route, segments: UrlSegment[]): Observable<boolean> | Promise<boolean> | boolean {\n    return this.store.select('user').pipe(\n        map((storeState) => {\n          if (!storeState.user) {\n            console.log('storeState', storeState);\n\n            this.router.navigateByUrl('/auth/signin');\n            return false;\n          }\n          return true;\n        }),\n        take(1),\n    );\n  }\n\n  // If lazy loadnig module already fetched and user logged out\n  // this guard prevents to activate module\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n    Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.store.select('user').pipe(\n        map((storeState) => {\n          if (!storeState.user) {\n            this.router.navigateByUrl('/auth/signin');\n            return false;\n          }\n          return true;\n        }),\n        // take(1),\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { Store } from '@ngrx/store';\nimport { State } from '../store/reducers';\nimport { LoadUser } from '../store/actions/user.actions';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class HttpInterceptorService implements HttpInterceptor {\n\n  constructor(\n    private store: Store<State>,\n  ) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler):\n    Observable<HttpEvent<any>> {\n\n    // to modify request\n    // req = req.clone();\n    // return next.handle(req);\n\n\n    return next.handle(req).pipe(\n      tap((event: HttpEvent<any>) => {\n        if (event instanceof HttpResponse) {\n\n          // fire action to check user auth\n          this.store.dispatch(new LoadUser());\n\n          // to modify response\n          // event = event.clone({ body: this.modifyBody(event.body) });\n        }\n        return event;\n      }\n      ));\n\n  }\n  \n  private modifyBody(body: any) {\n    /*\n    * write your logic to modify the body\n    * */\n    return body;\n  }\n\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router, CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { Store } from '@ngrx/store';\nimport { State } from '../store/reducers';\n\nimport { UserService } from './user.service';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoAuthGuard implements CanActivate {\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private store: Store<State>,\n\n  ) { }\n\n  canActivate( route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n  Observable<boolean | UrlTree>| Promise<boolean | UrlTree>| boolean | UrlTree {\n    return this.store.select('user').pipe(\n        map((storeState) => {\n          if (storeState.user) {\n            this.router.navigateByUrl('/');\n            return false;\n          }\n          return true;\n        }),\n        // take(1),\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { User, UserCandidate } from '../interfaces';\nimport { CookieService } from 'ngx-cookie-service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { redirectionUrl, State } from '../store/reducers/user.reducer';\nimport { Router } from '@angular/router';\nimport { Redirection } from '../store/actions/user.actions';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(\n    private http: HttpClient,\n    private cookieService: CookieService,\n    private store: Store<State>,\n    private router: Router,\n  ) {\n    this.store.select(redirectionUrl)\n      .subscribe((url) => {\n        if (url) {\n          this.router.navigateByUrl(url);\n          this.store.dispatch(new Redirection(null));\n        }\n      });\n  }\n\n  loadUser(): Observable<User | null> {\n    // return of ({_id: '2344562546', login: 'test'})\n    const token = this.cookieService.get('chatClient');\n    const helper = new JwtHelperService();\n    if (token && !helper.isTokenExpired(token) ) {\n      const { user } = helper.decodeToken(token);\n      console.log('user', user)\n      return of(user);\n    }\n    return of(null);\n  }\n\n  login(userCandidate: UserCandidate): Observable<string> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    };\n\n    return this.http.post<string>(\n      'api/user/login',\n      userCandidate,\n      httpOptions,\n    )\n  }\n\n  signup(userCandidate: UserCandidate): Observable<string> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    };\n\n    return this.http.post<string>(\n      'api/user/signup',\n      userCandidate,\n      httpOptions,\n    )\n  }\n\n  logout(): Observable<string> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    };\n\n    return this.http.get<string>(\n      'api/user/logout',\n      httpOptions,\n    )\n  }\n\n  matchPassword(abstractControl: AbstractControl): ValidationErrors | null {\n    const password = abstractControl.get('password').value;\n    const passwordConfirm = abstractControl.get('passwordConfirm').value;\n    if (password === passwordConfirm) {\n      abstractControl.get('passwordConfirm').setErrors(null);\n      return null;\n    } else {\n      /**\n       * set error to 'passwordConfirm' element\n       */\n\n      abstractControl.get('passwordConfirm').setErrors({ mismatch: true });\n      /**\n       * and don't set error (null) to formGroup\n       */\n      return null;\n    }\n  }\n}\n","import { User, UserCandidate } from './../../interfaces';\nimport { Action } from '@ngrx/store';\n\n\nexport enum UserActionTypes {\n  LoadUser = '[User] Load User',\n  Authenticated = '[User] Authenticated User',\n  NotAuthenticated = '[User] NotAuthenticated User',\n  AuthError = '[User] AuthError',\n  Redirection = '[User] Redirection',\n  Login = '[User] Login',\n  Signup = '[User] Signup',\n  Logout = '[User] Logout',\n}\n\nexport class LoadUser implements Action {\n  readonly type = UserActionTypes.LoadUser;\n}\n\nexport class Authenticated implements Action {\n  readonly type = UserActionTypes.Authenticated;\n  constructor(public payload: User) { }\n}\n\nexport class NotAuthenticated implements Action {\n  readonly type = UserActionTypes.NotAuthenticated;\n}\n\nexport class AuthError implements Action {\n  readonly type = UserActionTypes.AuthError;\n  constructor(public payload: any) { }\n}\n\nexport class Redirection implements Action {\n  readonly type = UserActionTypes.Redirection;\n  constructor(public payload: string | null ) { }\n}\n\nexport class Login implements Action {\n  readonly type = UserActionTypes.Login;\n  constructor(public payload: UserCandidate) { }\n}\n\nexport class Signup implements Action {\n  readonly type = UserActionTypes.Signup;\n  constructor(public payload: UserCandidate) { }\n}\n\nexport class Logout implements Action {\n  readonly type = UserActionTypes.Logout;\n}\n\n\nexport type UserActions\n  = LoadUser\n  | Authenticated\n  | NotAuthenticated\n  | AuthError\n  | Redirection\n  | Login\n  | Signup\n  | Logout;\n\n","import { UserService } from './../../services/user.service';\nimport * as fromUserActions from './../actions/user.actions';\nimport { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\n\n\n@Injectable()\nexport class UserEffects {\n\n  @Effect()\n  loadUser: Observable<Action | Action[]> = this.actions$.pipe(\n    ofType(fromUserActions.UserActionTypes.LoadUser),\n    map((action: fromUserActions.LoadUser) => null),\n    switchMap((_) => this.userService.loadUser().pipe(\n      switchMap((user) => {\n        let actions: Action[];\n        if (user) {\n          // User logged in\n          actions = [new fromUserActions.Authenticated( user )];\n        } else {\n          // User not logged in\n          actions = [new fromUserActions.NotAuthenticated()];\n        }\n          return actions;\n      }),\n      catchError((err) => [new fromUserActions.AuthError(err), new fromUserActions.NotAuthenticated()]),\n    )),\n  );\n\n  @Effect()\n  logout: Observable<Action | Action[]> = this.actions$.pipe(\n    ofType(fromUserActions.UserActionTypes.Logout),\n    switchMap(() => this.userService.logout().pipe(\n      map((_) => new fromUserActions.Redirection('/auth/signin')),\n      catchError((err) => of(new fromUserActions.AuthError(err))),\n    )),\n  );\n\n  @Effect()\n  login: Observable<Action | Action[]> = this.actions$.pipe(\n    ofType(fromUserActions.UserActionTypes.Login),\n    map((action: fromUserActions.Login) => action.payload),\n    switchMap((payload) => this.userService.login(payload).pipe(\n      map((_) => new fromUserActions.Redirection('/')),\n      catchError((err) => of(new fromUserActions.AuthError(err))),\n    )),\n  );\n\n  @Effect()\n  signup: Observable<Action | Action[]> = this.actions$.pipe(\n    ofType(fromUserActions.UserActionTypes.Signup),\n    map((action: fromUserActions.Signup) => action.payload),\n    switchMap((payload) => this.userService.signup(payload).pipe(\n      map((_) => new fromUserActions.Redirection('/')),\n      catchError((err) => of(new fromUserActions.AuthError(err))),\n    )),\n  );\n\n\n  constructor(\n    private actions$: Actions,\n    private userService: UserService,\n    ) {}\n\n}\n","import { ActionReducerMap, MetaReducer } from '@ngrx/store';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport * as fromUser from './user.reducer';\r\n\r\nexport interface State {\r\n  user: fromUser.State;\r\n}\r\n\r\nexport const reducers: ActionReducerMap<State> = {\r\n  user: fromUser.reducer,\r\n};\r\n\r\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [] : [];\r\n","import { LoadUser } from './../actions/user.actions';\nimport { User } from './../../interfaces';\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { UserActions, UserActionTypes } from '../actions/user.actions';\n\nexport const userFeatureKey = 'user';\n\nexport interface State {\n  user: User | null;\n  loading: boolean;\n  redirectionUrl: string | null;\n}\n\nexport const initialState: State = {\n  user: null,\n  loading: false,\n  redirectionUrl: null,\n};\n\nexport function reducer(state = initialState, action: UserActions): State {\n  switch (action.type) {\n\n    case UserActionTypes.LoadUser:\n      return { ...state, loading: true };\n\n    case UserActionTypes.Authenticated:\n      return { ...state, user: { ...action.payload }, loading: false };\n\n    case UserActionTypes.NotAuthenticated:\n      return { ...state, user: initialState.user, loading: false };\n\n    case UserActionTypes.Redirection:\n      return { ...state, redirectionUrl: action.payload };\n\n    default:\n      return state;\n  }\n}\n\nconst featureSelector = createFeatureSelector<State>(userFeatureKey);\n\nexport const getUser = createSelector(featureSelector, (state) => state.user);\nexport const redirectionUrl = createSelector(featureSelector, (state) => state.redirectionUrl);\n","import { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { NgModule } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { StoreModule } from '@ngrx/store';\nimport { reducers, metaReducers } from './reducers';\nimport { EffectsModule } from '@ngrx/effects';\nimport { UserEffects } from './effects/user.effects';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    StoreModule.forRoot(reducers, {\n      metaReducers,\n      runtimeChecks: {\n        strictStateImmutability: true,\n        strictActionImmutability: true,\n      },\n    }),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n    EffectsModule.forRoot([UserEffects])\n  ]\n})\n\nexport class AppStoreModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}